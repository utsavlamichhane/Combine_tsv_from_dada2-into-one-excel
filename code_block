import pandas as pd
import os

# Directory containing your TSV files (Desktop_utsav_mac/tsv_qzv)
tsv_directory = '/path/to/your/tsv_files'  # Update this path

# Excel file to save
excel_filename = '/path/to/save/consolidated_data.xlsx'  # Update this path

# Create a Pandas Excel writer using openpyxl as the engine
writer = pd.ExcelWriter(excel_filename, engine='openpyxl')

# Iterate through all TSV files in the directory
for filename in os.listdir(tsv_directory):
    if filename.endswith('.tsv'):
        file_path = os.path.join(tsv_directory, filename)
        # Read the TSV file into a Pandas DataFrame
        df = pd.read_csv(file_path, sep='\t')
        # Write the DataFrame to a sheet named after the TSV file
        sheet_name = os.path.splitext(filename)[0]
        df.to_excel(writer, sheet_name=sheet_name, index=False)

# Save the Excel workbook
writer.save()

print(f"All TSV files have been consolidated into {excel_filename}")

#################################################################################################
########### the following code block will give us the average of all the columns in all the tsv files (as a sheet in the new excel file) corresponding to the dada2 .qzv file
#################################################################################################


# Function to flatten MultiIndex columns #need to flatten because view.qiime2 give 2 headers in the tsvs

def flatten_columns(df):
    df.columns = [' '.join(col).strip() for col in df.columns.values]
    return df

# Original and new Excel file paths
original_excel_filename = '/Users/ugalab4/Desktop/Buccal_microbiome/analysis_1/tsvs/consolidated_data.xlsx'
new_excel_filename = '/Users/ugalab4/Desktop/Buccal_microbiome/analysis_1/tsvs/consolidated_data_with_averages.xlsx'

# Create a Pandas Excel writer for the new file
writer = pd.ExcelWriter(new_excel_filename, engine='openpyxl')

# Read each sheet, calculate averages, and write to the new file
with pd.ExcelFile(original_excel_filename) as xls:
    for sheet_name in xls.sheet_names:
        df = pd.read_excel(xls, sheet_name=sheet_name, header=[0, 1])

        # Flatten the MultiIndex columns
        df = flatten_columns(df)

        # Calculate the average of each numeric column
        averages = df.select_dtypes(include='number').mean()

        # Prepare the averages as a new DataFrame row
        averages_row = pd.DataFrame([averages], index=['Average'])

        # Set non-numeric columns to NaN or some other placeholder if needed
        for col in df.columns:
            if col not in averages_row:
                averages_row[col] = 'Average'

        # Concatenate the averages row to the original DataFrame
        df = pd.concat([df, averages_row])

        # Write the modified DataFrame to a new sheet in the new Excel file
        df.to_excel(writer, sheet_name=sheet_name, index=False)

# Close the Excel writer to save the new file
writer.close()

print(f"Updated Excel file with averages saved in {new_excel_filename}")



